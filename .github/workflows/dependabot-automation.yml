name: Dependabot Auto Merge
on: pull_request

# Set the access for individual scopes, or use permissions: write-all
permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  contents: write

jobs:
  merge-pr:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
        - name: Dependabot metadata
          id: metadata
          uses: dependabot/fetch-metadata@v1
          with:
            github-token: "${{ secrets.GITHUB_TOKEN }}"
        - name: Approve and merge PR
          run: |
            gh pr review --approve "$PR_URL"
            gh pr merge --auto --squash "$PR_URL"
          env:
            PR_URL: ${{github.event.pull_request.html_url}}
            GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  create-release-branch:
    runs-on: ubuntu-latest
    needs: merge-pr
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create release-candidate branch if not exists
        run: |
          git fetch origin
          if git show-ref --quiet refs/remotes/origin/release-candidate; then
            echo "Release candidate branch exists" 
            git checkout release-candidate
            git config pull.rebase false
            git pull origin dev
            git push origin release-candidate
          else
            echo "Release candidate branch does not exist" 
            git checkout -b release-candidate
            git push origin release-candidate
          fi
          
